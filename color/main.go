package main

import (
       "fmt"	
	"time"
	"github.com/fatih/color"
)

// Connect and view
func FmtGreeen(text string) {
	Appcolor := color.New(color.FgGreen, color.Bold)
       Appcolor.Println(text)
}

func FmtRed(text string) {
     Appcolor := color.New(color.FgRed, color.Bold)
     Appcolor.Println(text)
}

func FmtBlue(text string) {
     Appcolor := color.New(color.FgBlue, color.Bold)
     Appcolor.Println(text)
}

func FmtApp(app, text string) {
     Appcolor := color.New(color.FgRed, color.Bold)
     Appcolor.Print(" " + app + ": ")
     Appcolor = color.New(color.FgWhite )
     Appcolor.Println(text)    
}

func FmtSys(err string){
     red := color.New(color.FgRed, color.Bold).PrintfFunc()
     red("Warning")
     red("Error: %s", err)
}


 func InfoSys(text, clr string ){
      cl:=map[string] int {
            "white"   : 0,
            "red"     : 31,
            "green"   : 32,
            "yellow"  : 33,
            "blue"    : 34,
      }  

      fmt.Println(cl[clr])

       atrb:=color.Attribute(cl[clr])
      red := color.New(atrb, color.Bold).PrintfFunc()
      red("-------------------Warning")
      red("NOTE : %s",text )
 }



func main(){

        InfoSys("–ö—Ä–∞—Å–Ω—ã–π",      "white")
        InfoSys("–ö—Ä–∞—Å–Ω—ã–π",      "red")
        InfoSys("–ì–æ–ª—É–±–æ–π —Ü–≤–µ—Ç", "blue")
        InfoSys("–ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç", "green")
        InfoSys("–ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç", "yellow")


      fmt.Printf("%+v", color.FgRed) 
      fmt.Printf("%+v", color.FgGreen) 

       FmtSys("Start ghjwtlehss")
       FmtApp("APP","üìî Start......")
       time.Sleep(time.Second * 2)
       FmtApp("APP","FINISH BASE PROCEDURE")

       FmtGreeen(" APP: üìî Start......")
       time.Sleep(time.Second * 2)
       FmtGreeen(" APP: –ù–∞—á–∞–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤")
       time.Sleep(time.Second * 1)
       FmtGreeen(" –í—Å–µ —Ñ–∞–π–ª—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
       time.Sleep(time.Second * 1)
       FmtRed(" AAPP: –í—Å–µ —Ñ–∞–π–ª—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
       time.Sleep(time.Second * 1)
       FmtRed(" APP: –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã")
       time.Sleep(time.Second * 1)
       FmtBlue(" SYS: –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤")
       time.Sleep(time.Second * 2)
       FmtGreeen(" IDX:  –ò–Ω–¥–µ–∫—Å—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã" )
       time.Sleep(time.Second * 2)
       FmtGreeen(" APP: –ò–ù–î–ö–ï–ö–°–´ –ë–´–õ–ò –£–°–ü–ï–®–ù–û –°–û–ó–î–ê–ù–´" )
       time.Sleep(time.Second * 2)
       FmtBlue("‚è∞ –ü–†–ò–ú–ï–† –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –ü–†–û–°–¢–û–ì–û –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø –î–õ–Ø –°–û–ó–î–ê–ù–ò–Ø –ü–†–û–¶–ï–î–£–†–´")
       time.Sleep(time.Second * 2)
       FmtRed("üßë‚Äç‚öñÔ∏è –ü–†–ò–ú–ï–† –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –ü–†–û–°–¢–û–ì–û –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø –î–õ–Ø –°–û–ó–î–ê–ù–ò–Ø –ü–†–û–¶–ï–î–£–†–´")
}

